# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

# macos
**/.DS_Store
**/.env

## CI
codesigndoc_exports

# Carthage framework bundle - created during release process
*.framework.zip
# Fastlane config script is downloaded
fastlane/Fastfile
# Fastlane plugin config is downloaded
fastlane/Pluginfile
# Mint dependencies file which is downloaded
Mintfile
# Swiftlint config file which is downloaded
.swiftlint.yml
# Danger config file which is downloaded
Dangerfile
# Ruby gems config file which is downloaded
Gemfile
# Bundler configuration which is bootstrapped
.bundle
# Bundler vendor information which is bootstrapped
vendor

## Build generated
build/
DerivedData/

## Various settings
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3
xcuserdata/

## Other
*.moved-aside
*.xccheckout
*.xcscmblueprint

## Obj-C/Swift specific
*.hmap
*.ipa
*.dSYM.zip
*.dSYM

## Playgrounds
timeline.xctimeline
playground.xcworkspace

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
Pods/

# Carthage
#
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts
Carthage/Build

# SPM
.build
.swiftpm

# fastlane
#
# It is recommended to not store the screenshots in the git repo. Instead, use fastlane to re-generate the
# screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://docs.fastlane.tools/best-practices/source-control/#source-control

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots
fastlane/test_output
fastlane/.env
fastlane/README.md